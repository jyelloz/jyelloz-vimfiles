snippet ns
	namespace ${1:`Filename("", "untitled")`} {

		${2}

	}
snippet cl
	class ${1:`Filename("", "untitled")`} : ${2:GLib.Object} {

		${3}
	}${4}
snippet cla
	abstract class ${1:`Filename("", "untitled")`} : ${2:GLib.Object} {

		${3}
	}${4}
snippet in
	interface ${1:`Filename("", "untitled")`} : ${2:GLib.Object} {

		${3}
	}${4}
snippet u using statement
	using ${1:Name.Space};
	${2}
snippet m instance method or unbound function
	${1:public} ${2:void} ${3:<function name>} (${4:<args>}){
		${5}
	}${6}
snippet ms static method
	${1:public} ${2:static} ${3:void} ${4:<function name>} (${5:<args>}){
		${6}
	}${7}
snippet ma abstract method
	${1:public} abstract ${2:void} ${3:<function name>} (${4:<args>});${5}
snippet { code block
	{
		${1}
	}${2}
snippet if
	if (${1})${2}
snippet el
	else 
snippet elif
	else if (${1})${2}
snippet wh
	while (${1})${2}
snippet for
	for (${1}; ${2}; ${3})${4}
snippet fore
	foreach (${1} in ${2})${3}
snippet sw
	switch (${1}){
		${2}
		default:
			${3}
	}$4
snippet cs
	case ${1}:
		${2}
	${3}
snippet tryc
	try {
		${1}
	} catch (${2:GLib.Error e}){
		${2}
	}${3}
snippet tryf
	try {
		${1}
	} finally {
		${2}
	}${3}
snippet trycf
	try {
		${1}
	} catch (${2:GLib.Error e}){
		${3}
	} finally {
		${4}
	}${5}
